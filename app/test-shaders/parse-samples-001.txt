precision mediump float;
varying float xx, yy;
uniform float iGlobalTime, time;
const vec2 iResolution = vec2(1.0, 1.0);

float sqr(in float a) { return pow(a, 2.0); }

vec3 affector (vec2 uv) {
    float x = uv.x;
    float y = uv.y;
	x = sqr((sqr((x*10.0000))+sqr((y*10.0000))));
	y = abs(abs((7.0000*(y-y))));
	float z = sqr((sqr((x*10.0000))+sqr((y*10.0000))));
    return vec3(sqr(((x*(y*sin((abs((x*sin(z)))-z))))*10.0000)));
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
	vec2 uv = fragCoord.xy / iResolution.xy;
	fragColor = vec4((0.5+0.5*sin(iGlobalTime)) * affector(uv),1.0);
}

void main(void) {
	mainImage(gl_FragColor, vec2(xx, yy));
}